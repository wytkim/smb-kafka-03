#====================================================================================
# sqlite jdbc 설정. hikariCP 설정
#------------------------------------------------------------------------------------
#spring.datasource-main:
#    driver-class-name: log4jdbc 사용에 따라 구분	
#    jdbc-url: 			jdbc url. log4jdbc 사용에 따라 구분
#    username: 			db 계정 
#    password:			db 암호. 
#    connectionProperties: 기타 연결에 필요한 옵션.
#	
#	connection-test-query	: Altibase와 같이 잘 알려지지 않은 DB는 쿼리를 입력해야 한다. 
#								JDBC4 드라이버를 지원한다면 이 옵션은 설정하지 않는 것을 추천
#								이 옵션은 JDBC4를 지원안하는 드라이버를 위한 옵션임.
#								커넥션 pool에서 커넥션을 획득하기전에 살아있는 커넥션인지 확인하기 위해 
#								valid 쿼리를 던지는데 사용되는 쿼리 
#								JDBC4드라이버를 지원하지 않는 환경에서 이 값을 설정하지 않는다면 error레벨 로그를 밷어낸다. 
#	maximum-pool-size		: connection pool size. pool에 유지시킬 수 있는 최대 커넥션 수
#								pool의 커넥션 수가 옵션 값에 도달하게 되면 idle인 상태는 존재하지 않는다. 
#	connection-timeout		: pool에서 커넥션을 얻어오기전까지 기다리는 최대 시간, 허용가능한 wait time을 초과하면
#								SQLException을 던짐 설정가능한 가장 작은 시간은 250ms (default: 30000)
#	validation-timeout		: valid 쿼리를 통해 커넥션이 유효한지 검사할 때 사용되는 timeout 최소 250ms 이상부터 설정 가능(default: 5000)
#	max-lifetime			: 커넥션 풀에서 살아있을 수 있는 커넥션의 최대 수명시간 사용중인 커넥션은 max-lifetime에 상관없이 제거되지 않음.
#								사용중이지 않을 때만 제거됨. pool 전체가 아닌 커넥션 별로 적용이 되는데 그 이유는 풀에서 대량으로 커넥션들이
#								제거되는 것을 방지하기 위함임. 강력하게 설정해야하는 설정 값으로 데이터베이스나 인프라의 적용된 
#								connection time limit보다 작아야 함. 0으로 설정하면 infinite lifetime이 적용됨. 
#								(idle-timeout설정 값에 따라 적용 idle-timeout값이 설정되어 있을 경우 0으로 설정해도 무한 lifetime 적용 안됨.)
#								default- 1800000(10 분)
#	initialization-fail-timeout: pool에서 커넥션을 초기화할 때 성공적으로 수행할 수 없을 경우 빠르게 실패하도록 해준다.
#								양수 - 초기 연결 획득을 시도하는 시간(밀리초)로 간주된다. (시간 초과는 connection timeout 기간 후에 적용된다.) 
#								0 - HikariCP는 연결을 확보하고 확인을 시도한다. 연결을 얻었지만 유효성 검사에 실패하면 예외가 발생. pool은 시작 안함. 
#								음수 - 초기 연결 시도를 무시하고 백그라운드에서 연결을 얻으려고 시도하는 동안 pool이 즉시 시작된다. 
#									따라서 나중에 연결을 얻으려는 시도가 실패할 수 있다. 
#								(default - 1)
#====================================================================================
spring.datasource-main.driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
#spring.datasource-main.driver-class-name: org.postgresql.Driver
spring.datasource-main.jdbc-url: jdbc:log4jdbc:postgresql://127.0.0.1:5432/kafka_process
#spring.datasource-main.jdbc-url: jdbc:postgresql://127.0.0.1:5432/kafka_process
#spring.datasource-main.username: postgres
#spring.datasource-main.password: postgres
spring.datasource-main.username: kafka_user
spring.datasource-main.password: kafka_user
spring.datasource-main.connectionProperties: 

#spring.datasource-main.connection-test-query: select 1 from dual
spring.datasource-main.maximum-pool-size: 10
spring.datasource-main.connection-timeout: 3000
spring.datasource-main.validation-timeout: 2000
spring.datasource-main.max-lifetime: 1800000
# database 연결되지 않아도 프로세스 구동 가능.
spring.datasource-main.initialization-fail-timeout: -1
